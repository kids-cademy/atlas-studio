<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.kidscademy</groupId>
		<artifactId>atlas-studio</artifactId>
		<version>0.4.2</version>
	</parent>
	<artifactId>atlas-studio-war</artifactId>
	<packaging>war</packaging>

	<name>Web Application</name>
	<description>Creates Atlas Studio web application, for both development and production environments. This module depends on server services and user interface modules.</description>

	<build>
		<finalName>${app.name}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven.war.version}</version>
				<configuration>
					<webResources>
						<resource>
							<!-- this path is relative to the pom.xml directory of this module, not parent project that contains modules -->
							<!-- it is not an ideal solution but is acceptable since WAR module clearly depends user interface module -->
							<!-- an elegant solution would be to include somehow resources dependency but do not know how :-( -->
							<directory>${wood-site-path}</directory>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>${maven.tomcat7.version}</version>
				<configuration>
					<url>http://localhost:8080/manager/text</url>
					<server>tomcat</server>
					<path>/${app.name}</path>
				</configuration>
				<executions>
					<execution>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>redeploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>preview</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>${maven.war.version}</version>
						<configuration>
							<webXml>config/preview/web.xml</webXml>
							<webResources>
								<resource>
									<!-- do not embed user interface files into generated web archive since they are served directly from source directory -->
									<excludes>
										<exclude>**/*</exclude>
									</excludes>
								</resource>
							</webResources>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.tomcat.maven</groupId>
						<artifactId>tomcat7-maven-plugin</artifactId>
						<version>${maven.tomcat7.version}</version>
						<configuration>
							<!-- deploy preview WAR on different context so that we can use both web application and preview contexts -->
							<path>/${app.name}-preview</path>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>production</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>${maven.war.version}</version>
						<configuration>
							<webResources>
								<resource>
									<!-- do not include static files from user interface module on production profile since they are deployed on Apache front-end -->
									<excludes>
										<exclude>**/*</exclude>
									</excludes>
								</resource>
							</webResources>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>com.kidscademy</groupId>
			<artifactId>atlas-studio-service</artifactId>
			<version>0.4.2</version>
		</dependency>
	</dependencies>
</project>